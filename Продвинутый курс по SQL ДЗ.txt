--Практическое задание № 1
/*1.В разделе declare объявить переменную mystr, положить в неё значение «Hello, World!». Затем вывести на экран, используя dbms_output.put_line();
declare mystr varchar(20):= 'Hello, World!';
begin
dbms_output.put_line(mystr);
end;
2.Повторить п.1, присвоив значение «Hello, World!» внутри блока begin..end с помощью конструкции :=
declare mystr varchar(20);
begin
mystr := 'Hello, World!';
dbms_output.put_line(mystr);
end;
3.Повторить п.1, присвоив значение «Hello, World!» внутри блока begin..end с помощью конструкции select … into
declare mystr varchar(20);
begin
SELECT 'Hello, World!' into mystr from DUAL;
dbms_output.put_line(mystr);
end;
4.Используя with … as, создать табличное выражение, содержащее все записи, с ценой товара больше 70. С помощью select отобразить всё содержимое этого выражения.
with produtc_with_price70 as 
(SELECT * FROM PIES_SVV where PRICE > 70)
SELECT * FROM produtc_with_price70;
*/

--Практическое задание №2
/*
1.Вычислить 2 переменные: самый дешёвый продукт, производимый бабушкой и дедушкой. Сравнить эти переменные. 
Вывести строку "Самый дешёвый продукт делает %MAKER_TYPE%", либо сообщение о равенстве цен самых дешёвых продуктов.

declare 
productName_of_Grendmother number(3);
productName_of_Grendfather number(3);
BEGIN
with MIN_PRICE_SVV AS
(select MAKER_TYPE, MIN(PRICE)AS PRICE FROM PIES_SVV GROUP BY MAKER_TYPE)
SELECT (select PRICE FROM MIN_PRICE_SVV where MAKER_TYPE = 'бабушка') into productName_of_Grendmother FROM DUAL;
with MIN_PRICE_SVV AS
(select MAKER_TYPE, MIN(PRICE)AS PRICE FROM PIES_SVV GROUP BY MAKER_TYPE)
SELECT (select PRICE FROM MIN_PRICE_SVV where MAKER_TYPE = 'дедушка') into productName_of_Grendfather FROM DUAL;
if productName_of_Grendmother = productName_of_Grendfather then
dbms_output.put_line('сообщение о равенстве цен самых дешёвых продуктов');
elsif productName_of_Grendmother < productName_of_Grendfather then
dbms_output.put_line('Самый дешёвый продукт делает бабушка');
elsif  productName_of_Grendmother > productName_of_Grendfather then
dbms_output.put_line('Самый дешёвый продукт делает дедушка');
end if;
end;

2.Если средняя цена на блины меньше, чем средняя на пирожки, вывести сообщение: «В среднем, блины дешевле пирожков на X руб», 
где X – абсолютное значение разницы между средней ценой пирожка и средней ценой блина. 
Если средняя цена на блины больше или равна средней цены на пирожки, вывести сообщение: «блины стоят не меньше пирожков».

declare
crepe_avr_price NUMBER(20);
pie_avr_price NUMBER(20);
X NUMBER(20);
BEGIN
with AVG_PRICE as
(select PRODUCT_NAME, AVG(PRICE) as APP from PIES_SVV
        group by PRODUCT_NAME)
SELECT (select app from AVG_PRICE where PRODUCT_NAME = 'блин')into crepe_avr_price FROM DUAL;
with AVG_PRICE as
(select PRODUCT_NAME, AVG(PRICE) as APP from PIES_SVV
        group by PRODUCT_NAME)
SELECT (select app from AVG_PRICE where PRODUCT_NAME = 'пирожок')into pie_avr_price FROM DUAL;
dbms_output.put_line(crepe_avr_price);
if crepe_avr_price <  pie_avr_price then --200 для проверки правильности условия
X := ABS(crepe_avr_price - pie_avr_price); --200 для проверки правильности условия
dbms_output.put_line('В среднем, блины дешевле пирожков на '|| X || ' руб.');
elsif crepe_avr_price >= pie_avr_price then
dbms_output.put_line('Блины стоят не меньше пирожков');
end if;
end;
*/
